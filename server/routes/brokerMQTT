const {Router} = require('express');
const router = Router();
const mqttHandler = require('../controller/mqttHandler');
const sensorData = require('../models/sensorDataModel');




router.get('/connect', (req,res) => {
    var mqttClient = new mqttHandler();
    mqttClient.connect();

    setTimeout(() => {
        if (mqttClient.isConnected()) {
          res.send("<h1>Connected to broker</h1>");
        } else {
          res.send("<h1>Not connected to broker</h1>");
        }
    }, 2000);
});


router.post('/sendMessage/:message', async(req,res) => {
    try {
        const newSensorData = new sensorData({
            channelID:req.params.channelID,
            deviceID:req.params.deviceID,
            value: req.params.value,
            createdOn: Date.now()
        });
        
        mqttHandler.sendMessage(req.params.message);
        await newSensorData.save();
        res.json({ "message": "Channel created" });
    } catch (error) {
        console.error(error);
        res.status(500).json({ "error": "Error creating channel" });
    }
    res.send("<h1>Message sent</h1>");
});


module.exports = router;