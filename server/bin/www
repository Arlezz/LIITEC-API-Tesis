#!/usr/bin/env node

var app = require('../app');
var http = require('http');
var dotenv = require('dotenv');
var mongoose = require('mongoose');
var MqttHandler = require('../controller/BrokerController');

let process = require('process');

dotenv.config({path: '.env'});
const { MONGODB_URI, MQTT_HOST, MQTT_USER, MQTT_PASSWORD } = process.env;


mongoose.connect(MONGODB_URI, {
    useNewUrlParser: true, 
}).then(() => {
    console.log('Connected to MongoDB');
}).catch((err) => {
    console.error('Error connecting to MongoDB\n');
    console.error(err);
});

const mqttClient = new MqttHandler(
    MQTT_HOST,
    MQTT_USER,
    MQTT_PASSWORD
);

// Suscribirse a todos los tópicos usando el carácter comodín #
mqttClient.subscribeToTopic("#");

var httpServer = http.createServer(app);

httpServer.listen(process.env.SERVER_PORT, function (err) {
    if (err) {
        console.error('Failure to launch server');
        return;
    }
    console.log(`Listening on port ${process.env.SERVER_PORT}`);
});




process.once('SIGUSR2', function () {

    console.log("Server restarting...");

    // MQTT close connection
    console.log("Closing MQTT connection...");
    mqttClient.closeConnection().then(() => {
        console.log("MQTT connection closed");
    }).catch((err) => {
        console.error("Error closing MQTT connection");
        console.error(err);
    });

    // HTTP close connection
    console.log("Closing HTTP server...");
    httpServer.close();
    console.log("HTTP server closed");

    // MongoDB close connection    
    console.log("Closing MongoDB connection...");
    mongoose.connection.close();
    console.log("MongoDB connection closed");

    // Restart server
    console.log("Server restarted");

    process.kill(process.pid, 'SIGUSR2');

});
